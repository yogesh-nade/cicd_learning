name: Deploy to Render

# Trigger deployment only on successful push to main branch
on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [ main ]

# Define environment variables
env:
  NODE_VERSION: '18.x'

jobs:
  # Only deploy if CI pipeline was successful
  deploy:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    # Only run if the CI workflow completed successfully
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    steps:
    # Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v4

    # Setup Node.js environment
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    # Install backend dependencies to verify build
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    # Run a quick build verification
    - name: Verify backend build
      run: |
        cd backend
        npm run test --if-present

    # Deploy to Render using Deploy Hook
    - name: Deploy to Render
      run: |
        echo "Triggering deployment to Render..."
        curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
      
    # Wait for deployment (optional)
    - name: Wait for deployment
      run: |
        echo "Waiting for deployment to complete..."
        sleep 30
        echo "Deployment triggered successfully!"

    # Verify deployment (optional)
    - name: Verify deployment
      run: |
        if [ -n "${{ secrets.RENDER_SERVICE_URL }}" ]; then
          echo "Checking if service is responding..."
          for i in {1..10}; do
            if curl -f -s "${{ secrets.RENDER_SERVICE_URL }}/health" > /dev/null; then
              echo "✅ Service is responding!"
              curl -s "${{ secrets.RENDER_SERVICE_URL }}/health" | jq '.' || echo "Health check response received"
              break
            else
              echo "⏳ Waiting for service to respond... (attempt $i/10)"
              sleep 15
            fi
          done
        else
          echo "RENDER_SERVICE_URL not configured, skipping verification"
        fi

    # Notify deployment status
    - name: Deployment Summary
      run: |
        echo "🚀 Deployment completed!"
        echo "📝 Commit: ${{ github.sha }}"
        echo "👤 Author: ${{ github.actor }}"
        echo "📅 Time: $(date)"
        if [ -n "${{ secrets.RENDER_SERVICE_URL }}" ]; then
          echo "🌐 Service URL: ${{ secrets.RENDER_SERVICE_URL }}"
        fi